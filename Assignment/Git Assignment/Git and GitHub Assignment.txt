Q1. Explain what version control is and its importance in software development.
=================================================================================
Ans. Version control is a system that tracks changes to a set of files over time. It allows developers to see
who made what changes and when, and to revert to previous versions of the code if needed. Version control is
essential for software development because it allows teams to collaborate on the same project without
stepping on each other's toes.

Here are some of its importance in software development- 
========================================================
1. Collaboration - makes it easy for multiple developers to work on the same project at the same time.
Developers can create their own branches of the code to work on new features or fix bugs, and then merge

2. History - keeps a complete history of all changes to the code. This makes it easy to track down the source of
a bug or to revert to a previous version of the code if necessary.

3. Backup - serves as a backup for the code. If a developer accidentally deletes a file or makes a mistake,
they can easily restore the file or revert to a previous version of the code.



Q2. Explain the Git Workflow, including the staging area, working directory, and repository.
=============================================================================================
Ans. The Git workflow is a set of steps and stages that developers follow to manage and track changes
effectively using Git, a popular version control system. It involves three main components: the working
directory, the staging area (also known as the index), and the repository.

a) Working Directory - The working directory is the local file system where you create, edit, and organize your
project files. When you initiate a Git repository in a directory, it becomes a part of the working directory.

b) Staging area (index) - The staging area is an intermediate area between the working directory and the
repository. It acts as a holding area for changes you want to include in the next commit. 3efore a file's changes
are committed, they need to be staged in the index.

c) Repository - The repository, also known as the Git repository or Git database, is where Git permanently
stores committed snapshots of your project. It contains the complete history of changes, branches, tags, and
other Git-related data.


Q3. Explain what .gi1ignore is and why itâ€™s important in version control.
===========================================================================
Ans. A .gitignore file is a text file that tells Git which files and folders to ignore. It is usually placed in the
root directory of a project. When Git sees a .gitignore file, it will ignore any files or folders that are listed in the
file.

The .gitignore files are important in version control because they help to keep the repository clean and
organized. They also prevent developers from accidentally committing unnecessary files to the repository,
such as log files, build artifacts, and IDE configuration files.



Q4. Briefly Explain what Github is and how it facilitates Collaboration and Version also name some alternatives to Github.
===========================================================================================================================
Ans. Github uses Git, a distributed version control system, to track changes to code.

Github facilitates Collaboration and version control in the following ways : 
-----------------------------------------------------------------------------
Version control - Github uses Git, a distributed version control system to tra

